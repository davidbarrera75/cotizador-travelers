<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard de Administración</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <style>
      body {
        font-family: 'Inter', sans-serif;
      }
      .modal-backdrop {
        background-color: rgba(0, 0, 0, 0.5);
        transition: opacity 0.3s ease-in-out;
      }
      .modal-content {
        transition: transform 0.3s ease-in-out;
      }
    </style>
  </head>
  <body class="bg-gray-100">
    <!-- Header -->
    <header class="bg-white shadow-md">
      <nav
        class="container mx-auto px-6 py-4 flex justify-between items-center"
      >
        <h1 class="text-2xl font-bold text-gray-800">
          Panel de Administración
        </h1>
        <!-- Botón de Logout (aún sin funcionalidad) -->
        <button
          id="logoutBtn"
          class="bg-red-500 hover:bg-red-600 text-white font-semibold py-2 px-4 rounded-lg transition"
        >
          Cerrar Sesión
        </button>
      </nav>
    </header>

    <!-- Main Content -->
    <main class="container mx-auto px-6 py-8">
      <div class="bg-white p-6 rounded-2xl shadow-lg">
        <h2 class="text-2xl font-semibold mb-6 border-b pb-4">
          Gestión de Tarifas
        </h2>

        <div id="loading-state" class="text-center py-10">
          <p class="text-gray-500">Cargando tarifas...</p>
        </div>

        <div id="error-state" class="text-center py-10 hidden">
          <p class="text-red-500 font-semibold">
            Error al cargar las tarifas. Intente recargar la página.
          </p>
        </div>

        <div id="tarifas-table-container" class="overflow-x-auto hidden">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Edificio
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Tipo de Apto
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Personas
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Precio
                </th>
                <th
                  class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Acciones
                </th>
              </tr>
            </thead>
            <tbody id="tarifas-tbody" class="bg-white divide-y divide-gray-200">
              <!-- Las filas se insertarán aquí dinámicamente -->
            </tbody>
          </table>
        </div>
      </div>
    </main>

    <!-- Modal para Editar Tarifa -->
    <div
      id="editModal"
      class="fixed inset-0 z-50 flex items-center justify-center hidden modal-backdrop"
    >
      <div
        class="bg-white rounded-lg shadow-xl p-8 w-full max-w-md modal-content"
      >
        <h3 class="text-2xl font-semibold mb-4">Editar Tarifa</h3>
        <div id="modal-info" class="mb-6 text-gray-600">
          <p><strong>Edificio:</strong> <span id="modal-edificio"></span></p>
          <p><strong>Tipo:</strong> <span id="modal-tipo"></span></p>
          <p><strong>Personas:</strong> <span id="modal-personas"></span></p>
        </div>

        <form id="editForm">
          <input type="hidden" id="modal-tarifa-id" />
          <div>
            <label
              for="modal-precio"
              class="block text-sm font-medium text-gray-700 mb-1"
              >Nuevo Precio (COP)</label
            >
            <input
              type="number"
              id="modal-precio"
              class="w-full p-3 border border-gray-300 rounded-lg"
              required
            />
          </div>

          <div class="mt-8 flex justify-end space-x-4">
            <button
              type="button"
              id="cancelBtn"
              class="bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-6 rounded-lg transition"
            >
              Cancelar
            </button>
            <button
              type="submit"
              class="bg-green-500 hover:bg-green-600 text-white font-semibold py-2 px-6 rounded-lg transition"
            >
              Guardar Cambios
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Toast Notification -->
    <div
      id="toast"
      class="fixed bottom-10 right-10 bg-gray-800 text-white py-3 px-6 rounded-lg shadow-lg opacity-0 transition-opacity duration-300"
    >
      <p id="toast-message"></p>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const API_URL = '/api/admin/tarifas'; // Usamos una ruta relativa
        let allTarifas = []; // Para guardar los datos localmente

        const loadingState = document.getElementById('loading-state');
        const errorState = document.getElementById('error-state');
        const tableContainer = document.getElementById(
          'tarifas-table-container'
        );
        const tbody = document.getElementById('tarifas-tbody');

        // --- Lógica del Modal ---
        const modal = document.getElementById('editModal');
        const cancelBtn = document.getElementById('cancelBtn');
        const editForm = document.getElementById('editForm');

        // --- Toast Notification ---
        const toast = document.getElementById('toast');
        const toastMessage = document.getElementById('toast-message');

        async function cargarTarifas() {
          try {
            loadingState.style.display = 'block';
            errorState.style.display = 'none';
            tableContainer.style.display = 'none';

            const response = await fetch(API_URL);
            if (!response.ok) {
              throw new Error('La respuesta del servidor no fue OK');
            }
            allTarifas = await response.json();
            renderizarTabla(allTarifas);

            loadingState.style.display = 'none';
            tableContainer.style.display = 'block';
          } catch (error) {
            console.error('Error al cargar las tarifas:', error);
            loadingState.style.display = 'none';
            errorState.style.display = 'block';
          }
        }

        function renderizarTabla(tarifas) {
          tbody.innerHTML = ''; // Limpiar la tabla
          tarifas.forEach((tarifa) => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
                        <td class="px-6 py-4 whitespace-nowrap">${
                          tarifa.edificio
                        }</td>
                        <td class="px-6 py-4 whitespace-nowrap">${
                          tarifa.tipo_apartamento
                        }</td>
                        <td class="px-6 py-4 whitespace-nowrap">${
                          tarifa.personas
                        }</td>
                        <td class="px-6 py-4 whitespace-nowrap" id="precio-${
                          tarifa.id
                        }">${tarifa.precio.toLocaleString('es-CO', {
              style: 'currency',
              currency: 'COP',
              minimumFractionDigits: 0,
            })}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                            <button data-id="${
                              tarifa.id
                            }" class="edit-btn text-indigo-600 hover:text-indigo-900">Editar</button>
                        </td>
                    `;
            tbody.appendChild(tr);
          });

          // Añadir event listeners a los nuevos botones de editar
          document.querySelectorAll('.edit-btn').forEach((button) => {
            button.addEventListener('click', handleEditClick);
          });
        }

        function handleEditClick(event) {
          const tarifaId = event.target.dataset.id;
          const tarifa = allTarifas.find((t) => t.id == tarifaId);

          if (tarifa) {
            document.getElementById('modal-tarifa-id').value = tarifa.id;
            document.getElementById('modal-edificio').textContent =
              tarifa.edificio;
            document.getElementById('modal-tipo').textContent =
              tarifa.tipo_apartamento;
            document.getElementById('modal-personas').textContent =
              tarifa.personas;
            document.getElementById('modal-precio').value = tarifa.precio;
            modal.classList.remove('hidden');
          }
        }

        function closeModal() {
          modal.classList.add('hidden');
        }

        async function handleFormSubmit(event) {
          event.preventDefault();
          const tarifaId = document.getElementById('modal-tarifa-id').value;
          const nuevoPrecio = document.getElementById('modal-precio').value;

          try {
            const response = await fetch(`${API_URL}/${tarifaId}`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ precio: nuevoPrecio }),
            });

            if (!response.ok) {
              throw new Error('Error al actualizar la tarifa');
            }

            const result = await response.json();

            // Actualizar la UI sin recargar toda la tabla
            const precioCell = document.getElementById(`precio-${tarifaId}`);
            precioCell.textContent = parseInt(nuevoPrecio).toLocaleString(
              'es-CO',
              { style: 'currency', currency: 'COP', minimumFractionDigits: 0 }
            );

            // Actualizar el array local
            const tarifaIndex = allTarifas.findIndex((t) => t.id == tarifaId);
            if (tarifaIndex !== -1) {
              allTarifas[tarifaIndex].precio = parseInt(nuevoPrecio);
            }

            closeModal();
            showToast('¡Tarifa actualizada con éxito!', 'success');
          } catch (error) {
            console.error('Error al guardar cambios:', error);
            showToast('Error al actualizar la tarifa.', 'error');
          }
        }

        function showToast(message, type = 'success') {
          toastMessage.textContent = message;
          toast.className = `fixed bottom-10 right-10 text-white py-3 px-6 rounded-lg shadow-lg transition-opacity duration-300 ${
            type === 'success' ? 'bg-green-600' : 'bg-red-600'
          }`;
          toast.classList.remove('opacity-0');

          setTimeout(() => {
            toast.classList.add('opacity-0');
          }, 3000);
        }

        // Inicialización y Event Listeners
        cargarTarifas();
        cancelBtn.addEventListener('click', closeModal);
        editForm.addEventListener('submit', handleFormSubmit);
      });
    </script>
  </body>
</html>
